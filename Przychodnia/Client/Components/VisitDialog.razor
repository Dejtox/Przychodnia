@using Przychodnia.Client.Services
@using Przychodnia.Shared
@using Przychodnia.Client.Models.Adaptors
@inject DialogService DialogService
@inject Services.AppDataService appData

<div class="row my-5">
        <div>
            <RadzenCard class="m-3">
                <h3 class="h5">Wizyta</h3>
                <div class="d-flex flex-row">
                    <RadzenImage Path="@user.PhotoPath" Class="rounded-circle float-left mr-3" Style="width: 100px; height: 100px;" />
                    <div>
                    @if(appData.account.RangID == 3)
                    {
                        <div>Lekarz</div>
                        <b>@model.DoctorName</b>
                    }
                    else
                    {
                        <div>Pacjent</div>
                        <b>@model.PatientName</b>
                    }
                        <div>Rodzaj wizyty</div>
                        <b>@model.Name</b>
                    </div>
                </div>
            </RadzenCard>
            <RadzenCard class="m-3">
                <h3 class="h5">Informacje</h3>
                <div class="row">
                    <div class="col-md-4">
                        <div>Numer wizyty</div>
                        <b>@model.VisitId</b>
                        <div class="mt-3">Opis</div>
                        <b>@model.Description</b>
                    </div>
                    <div class="col-md-8">
                        <div>Data</div>
                        <b>@model.Date</b>
                        <div class="mt-3">Opłacona</div>
                        <b>@(model.Paid ? "Tak" : "Nie")</b>
                    </div>
                    <div class="col-md-8">
                        <div>Numer faktury</div>
                        <b>@model.InvoiceNumber()</b>
                        <div class="mt-3">Opłacona</div>
                        <b>@(model.Paid ? "Tak" : "Nie")</b>
                    </div>
                </div>
            </RadzenCard>
        </div>
        <div class="row mb-4">
        <div class="col d-flex justify-content-center">
            @if(appData.account.RangID == 3 )
            {
                <RadzenButton Click=@(args => CancelVisit()) ButtonStyle="ButtonStyle.Danger" Text="Anuluj wizytę" />
            }
            else if (DateTime.Today < model.Date){
                <p>Nie można anulować wizyty w dniu jej wystąpienia.</p>
            }
            else if(DateTime.Today > model.Date)
            {
                <RadzenButton Click=@(args => FullfillVisit()) ButtonStyle="ButtonStyle.Success" Text="Potwierdź wizytę" />
            }
           </div>
           </div>

    </div>

@code {
    [Parameter]
    public Appointment appointment { get; set; }
    [Inject]
    public IUserService UserService{ get; set; }
    [Inject]
    public IVisitService VisitService { get; set; }

    Visit model = new Visit();

    User user = new User();

    protected override async Task OnParametersSetAsync()
    {
        model = appointment.visit;
        var users = await UserService.GetUsers();
        string name = appData.account.RangID == 3 ? model.DoctorName : model.PatientName;
        user = users.Where(u => u.ToString() == name).ToList().First();
        StateHasChanged();
    }


    void CancelVisit()
    {
        try
        {
            VisitService.DeleteVisit(model.VisitId);
            appData.visits = appData.visits.Where(v => v.VisitId != model.VisitId).ToList();
            StateHasChanged();
            DialogService.Close();
        }
        catch(Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

    async void FullfillVisit()
    {
        try
        {
            model.Successful = true;
            await VisitService.UpdateVisit(model);
            StateHasChanged();
            DialogService.Close();
        }
        catch(Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }
}