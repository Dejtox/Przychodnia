@using Przychodnia.Client.Components
@using Przychodnia.Client.Services
@using Przychodnia.Shared
@using Przychodnia.Client.Models.Adaptors
@inject DialogService DialogService
@inject Services.AppDataService appData
@inject NavigationManager NavManager


@page "/past-visits"

<h3>Historia wizyt</h3>

@if (pastVisits != null && pastVisits.Count() > 0)
{
    <RadzenCard>
        <RadzenDataList WrapItems="true" AllowPaging="true" Data="@pastVisits" TItem="Visit" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
        <Template Context="visit">
                        <RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">
                            <div class="container">
                                <div class="row">
                                    <div class="col-lg-3 p-3 product-title">
                                            @(visit.Name)
                                    </div>
                                    <div class="col-lg-7 p-3">
                                        <div class="row d-flex">
                                            <div class="col-md-6 col-lg-2">
                                                <h5 class="mb-0">Lekarz</h5>
                                                <p class="mb-sm-2 mb-lg-0">Tu imię lekarza</p>
                                            </div>
                                            <div class="col-md-6 col-lg-2">
                                                <h5 class="mb-0">Godzina</h5>
                                                <p class="mb-sm-2 mb-lg-0">@(visit.Date.ToString("HH:mm"))</p>
                                            </div>
                                            <div class="col-md-6 col-lg-5">
                                                <h5 class="mb-0">Dzień</h5>
                                                <p class="mb-sm-2 mb-lg-0">@(visit.Date.ToString("dd.MM.yyyy"))</p>
                                            </div>
                                            <div class="col-md-6 order-first order-lg-last col-lg-3 text-sm-left text-lg-right mb-3 mb-lg-0">
                                                <RadzenBadge BadgeStyle="@(visit.Paid ? BadgeStyle.Success : BadgeStyle.Danger)" IsPill=true Text="@(visit.Paid ? "Opłacono" : "Nie opłacono")" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-2 p-3">
                                        <RadzenIcon Icon="info" IconStyle="IconStyle.Primary" @onclick="(args => OnVisitSelect(visit))"/>
                                    </div>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
    </RadzenDataList>
    </RadzenCard>
}
else
{
    <h1>Ojojoj, ależ tu pusto :(, może trzeba się wybrać do gabinetu?</h1>
}

@code {
    List<Visit> pastVisits;


    [Inject]
    public IVisitService VisitService { get; set; }

    protected override async void OnInitialized()
    {
        if (appData.isLoggedIn)
        {
        var visits = await VisitService.GetVisits();
        pastVisits = visits.Where(v => v.Date < DateTime.Now).ToList<Visit>();
        if (appData.account.RangID == 3)
        {
            pastVisits = pastVisits.Where(v => v.PatientName == appData.account.ToString()).ToList();
        }
        else
        {
            pastVisits = pastVisits.Where(v => v.DoctorName == appData.account.ToString()).ToList();     
        }
        StateHasChanged();
        }
        else
        {
            NavManager.NavigateTo("/");
        }
        
    }

    async Task OnVisitSelect(Visit v)
    {
        await DialogService.OpenAsync<VisitDialog>(
            "Wizyta", 
            new Dictionary<string, object> { { "appointment", new Appointment { visit = v} } }
        );
    }
}
