@using Przychodnia.Shared

@page "/past-visits"

<h3>Historia wizyt</h3>

<RadzenCard>
    <RadzenDataList WrapItems="true" AllowPaging="true" Data="@pastVisits" TItem="Visit" PageSize="5" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
        <Template Context="visit">
                        <RadzenCard Style="width: 100%; padding: 0; overflow: hidden;">
                            <div class="container">
                                <div class="row">
                                    <div class="col-lg-3 p-3 product-title">
                                            @(visit.Name)
                                    </div>
                                    <div class="col-lg-7 p-3">
                                        <div class="row d-flex">
                                            <div class="col-md-6 col-lg-2">
                                                <h5 class="mb-0">Lekarz</h5>
                                                <p class="mb-sm-2 mb-lg-0">Tu imię lekarza</p>
                                            </div>
                                            <div class="col-md-6 col-lg-2">
                                                <h5 class="mb-0">Godzina</h5>
                                                <p class="mb-sm-2 mb-lg-0">@(visit.Date.ToString("HH:mm"))</p>
                                            </div>
                                            <div class="col-md-6 col-lg-5">
                                                <h5 class="mb-0">Dzień</h5>
                                                <p class="mb-sm-2 mb-lg-0">@(visit.Date.ToString("dd.MM.yyyy"))</p>
                                            </div>
                                            <div class="col-md-6 order-first order-lg-last col-lg-3 text-sm-left text-lg-right mb-3 mb-lg-0">
                                                <RadzenBadge BadgeStyle="@(visit.Paid ? BadgeStyle.Success : BadgeStyle.Danger)" IsPill=true Text="@(visit.Paid ? "Opłacono" : "Nie opłacono")" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </RadzenCard>
                    </Template>
    </RadzenDataList>
</RadzenCard>

@code {
    List<Visit> pastVisits;

    Visit[] visits = new Visit[]
                {
        new Visit
        {
            VisitId = 1,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddHours(14),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 2,
            Name = "Kanałowe",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddHours(-21),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 3,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddDays(-2).AddHours(15),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 4,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddDays(-5).AddHours(17),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 3,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddDays(-2).AddHours(15),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 4,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddDays(-5).AddHours(17),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 3,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddDays(-2).AddHours(15),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 4,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddDays(-5).AddHours(17),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 3,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddDays(-2).AddHours(15),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        new Visit
        {
            VisitId = 4,
            Name = "Wizyta kontrolna",
            Description = "Życie jest słabe i niefajne",
            Date = DateTime.Today.AddDays(-5).AddHours(17),
            Duration = 30,
            Paid = false,
            Successful = false
        },
        };

    protected override void OnInitialized()
    {
        pastVisits = visits.Where(v => v.Date < DateTime.Now).ToList<Visit>();
    }
}
